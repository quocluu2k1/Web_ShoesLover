@using Microsoft.AspNetCore.Http;
@using Newtonsoft.Json;
@{
    User user = null;
    if (Context.Session.GetString("user") != null)
    {
        user = JsonConvert.DeserializeObject<User>(Context.Session.GetString("user"));
    }
    List<CartItemDetail> cartList = null;
    if (Context.Session.GetString("cart") != null)
    {
        cartList = JsonConvert.DeserializeObject<List<CartItemDetail>>(Context.Session.GetString("cart"));
    }
}





<div class="cart-container">
    <h3 class="cart-header">Giỏ hàng</h3>
    <table class="table justify-content-lg-center" id="cart-table">
        <thead>
            <tr>
                <th scope="col" style="text-align:center;">Hình</th>
                <th scope="col" style="text-align:center;">Tên</th>
                <th scope="col">Size</th>
                <th scope="col">Màu</th>
                <th scope="col" style="text-align: center;">Số lượng</th>
                <th scope="col">Đơn giá</th>
                <th scope="col">Tổng</th>
            </tr>
        </thead>
        <tbody>
            @if (cartList == null)
            {
                <tr>
                    <td colspan="4" class="text-center">
                        <p>Bạn chưa thêm sản phẩm nào vào giỏ hàng</p>
                    </td>
                </tr>
            }
            else
                @foreach (var item in cartList)
                {
        <tr class="cart-item">
            <td>
                <input type="hidden" value="@item.ProductDetailId" class="product-id" />

                <div class="row-img">
                    <a class="btn-remove">
                        <i class="fas fa-times-circle"></i>
                    </a>
                    <div>
                        <img style="width:90px;" src="~/image/@item.Image" class="product-image" />

                    </div>


                </div>
            </td>
            <td style="text-align:center;">

                <p>@item.ProductName</p>

            </td>
            <td> @item.SizeName</td>
            <td> @item.ColorName</td>
            <td style="align-items: center ; text-align: center;">
                <a class="btn-decrease">
                    <i class="fas fa-minus"></i>
                </a>
                <input type="number" min="0" class="quantity" value="@item.Quantity" />
                <a class="btn-increase">
                    <i class="fas fa-plus"></i>
                </a>
            </td>
           @{ double price = item.PricePerUnit; <!--Đặt dấu . vào tiền-->
            double total = item.Quantity * item.PricePerUnit;
            string priceunit = price.ToString("N0",
            System.Globalization.CultureInfo.GetCultureInfo("de"));
            string result = total.ToString("N0",
            System.Globalization.CultureInfo.GetCultureInfo("de"));
            }
            <td class="price"> @item.PricePerUnit</td>
            <td>
                <div class="sub-total">
                    @(item.Quantity * item.PricePerUnit)
                   
                </div>
            </td>



        </tr>
                }
        </tbody>
    </table>
    <h5 style="text-align: end; margin: 15px;">Tổng cộng: <span class="total-price"></span></h5>
    <div class="cart-footer">
        <a class="btn-back" asp-controller="Home" asp-action="index"><i class="fas fa-chevron-left"></i> <span class="hide-on-mobile">Tiếp tục mua hàng</span></a>
        <div class="horizon-btn-group">
            <a class="btn btn-success text-light hidden" id="btn-save"> <i class="fas fa-save"></i>  <span class="hide-on-mobile">Lưu thay đổi</span></a>
            <a class="btn btn-danger text-light" id="btn-delete-all"><i class="fas fa-trash-alt"></i>  <span class="hide-on-mobile">Xóa tất cả</span></a>
            <a class="btn btn-primary text-light hidden" id="btn-reset"><i class="fas fa-history"></i> <span class="hide-on-mobile">Hoàn tác</span></a>
        </div>
        <a id="btn-checkout" class="btn-checkout"> <span class="hide-on-mobile">Đặt hàng</span> <i class="fas fa-chevron-right"></i></a>

    </div>

</div>
<style>
    /* .product-image {
        max-width: 80px;
        max-height: 60px;
    }  */

    .row-img{
        display: flex;
        justify-content: center;
        align-items:center;
    }
</style>

@section Styles{
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />

    <link rel="stylesheet" href="~/css/cart.css">
}
@section Scripts{
    <script src="~/js/cart.js"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $("#btn-delete-all").click(() => {
            Swal.fire({
                title: 'Bạn có muốn xóa tất cả?',
                text: "Bạn có thể sẽ phải tìm lại các sản phẩm cũ nếu xóa",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Chấp nhận xóa!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteAllCartItem", "Cart")',
                        type: 'POST',
                        dataType: 'JSON',

                        success: function (data) {
                            Swal.fire({
                                position: 'center',
                                icon: 'success',
                                title: 'Giỏ hàng làm mới thành công',
                                showConfirmButton: false,
                                timer: 1000
                            })
                            setTimeout(() => location.reload(), 1000);
                        }
                    })

                }
            })
        })


        $("#btn-save").click(() => {
            Swal.fire({
                title: 'Thông báo',
                text: "Bạn muốn lưu thay đổi của giỏ hàng",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Xác nhận lưu!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var data = [];
                    $('.cart-item').each((idx, element) => {
                        console.log("e", element)
                        var productID = parseInt($(element).find(".product-id").val())
                        var quantity = parseInt($(element).find(".quantity").val())
                        data.push({ UserId: 0, ProductDetailId: productID, Quantity: quantity });
                    })
                    console.log(data);
                    $.ajax({
                        url: '@Url.Action("UpdateCartList", "Cart")',
                        type: 'POST',
                        dataType: 'JSON',
                        data: { jsonData: JSON.stringify(data) },
                        success: function (data) {
                            Swal.fire({
                                position: 'center',
                                icon: 'success',
                                title: 'Giỏ hàng được cập nhật',
                                showConfirmButton: false,
                                timer: 1000
                            })
                            setTimeout(() => location.reload(), 1000);
                        }
                    })

                }
            })
        })

        $("#btn-checkout").click(() => {
            var data = [];
            $('.cart-item').each((idx, element) => {
                console.log("e", element)
                var productID = parseInt($(element).find(".product-id").val())
                var quantity = parseInt($(element).find(".quantity").val())
                data.push({ UserId: 0, ProductDetailId: productID, Quantity: quantity });
            })
            var jsonData = JSON.stringify(data);
            console.log("checkout -with: ", jsonData);

            fetch('@Url.Action("SetCheckoutList", "Order")',
                {
                    method: "POST",
                    headers: {
                        'Accept': 'appliaction/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(jsonData)

                }
            ).then((res) => location.href = "/Order/Checkout");
        })
    </script>

}
